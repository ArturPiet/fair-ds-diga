package de.expandai.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ScoresAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertScoresAllPropertiesEquals(Scores expected, Scores actual) {
        assertScoresAutoGeneratedPropertiesEquals(expected, actual);
        assertScoresAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertScoresAllUpdatablePropertiesEquals(Scores expected, Scores actual) {
        assertScoresUpdatableFieldsEquals(expected, actual);
        assertScoresUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertScoresAutoGeneratedPropertiesEquals(Scores expected, Scores actual) {
        assertThat(expected)
            .as("Verify Scores auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertScoresUpdatableFieldsEquals(Scores expected, Scores actual) {
        assertThat(expected)
            .as("Verify Scores relevant properties")
            .satisfies(e -> assertThat(e.getTime()).as("check time").isEqualTo(actual.getTime()))
            .satisfies(e -> assertThat(e.getQuestionnaire()).as("check questionnaire").isEqualTo(actual.getQuestionnaire()))
            .satisfies(e -> assertThat(e.getScore()).as("check score").isEqualTo(actual.getScore()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertScoresUpdatableRelationshipsEquals(Scores expected, Scores actual) {
        assertThat(expected)
            .as("Verify Scores relationships")
            .satisfies(e -> assertThat(e.getPatient()).as("check patient").isEqualTo(actual.getPatient()));
    }
}
